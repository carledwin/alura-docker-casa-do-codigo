version: '3'
#Receita de bolo 
#versão do docker compose
#services(diferentes parter da aplicação)
#os nomes dos services são escolhidos conforme desejado(nginx, mongodb, node1, node2 e node3)
services:
  nginx:
    build: 
      dockerfile: ./docker/nginx.dockerfile
      context: .
    image: douglasq/nginx:cap06
    container_name: nginx
    ports: 
      - "80:80"
    networks: 
      - production-network
    depends_on: 
      - "node1"
      - "node2"
      - "node3"
  mongodb:
    image: mongo
    networks:
      - production-network
  node1:
    build: 
      dockerfile: ./docker/alura-books.dockerfile
      context: .
    image: douglasq/alura-books:cap06
    container_name: alura-books-1
    ports: 
      - "3000"
    networks: 
      - production-network
    depends_on:
      - "mongodb"
  node2:
    build: 
      dockerfile: ./docker/alura-books.dockerfile
      context: .
    image: douglasq/alura-books:cap06
    container_name: alura-books-2
    ports: 
      - "3000"
    networks: 
      - production-network
    depends_on:
      - "mongodb"
  node3:
    build: 
      dockerfile: ./docker/alura-books.dockerfile
      context: .
    image: douglasq/alura-books:cap06
    container_name: alura-books-3
    ports: 
      - "3000"
    networks: 
      - production-network
    depends_on: 
      - "mongodb"
  
#production-network e um nome escolhido, poderia ser outro
#os services poderão conversar entre si, pois estarão na mesma rede
networks: 
  production-network:
    driver: bridge